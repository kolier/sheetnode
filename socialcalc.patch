diff -ruP socialcalc/socialcalc-3.js socialcalc.new/socialcalc-3.js
--- socialcalc/socialcalc-3.js	2010-05-13 18:39:28.000000000 +0300
+++ socialcalc.new/socialcalc-3.js	2010-05-25 18:40:38.000000000 +0300
@@ -4635,6 +4635,7 @@
    if (num) stylestr+="border-left:"+sheetobj.borderstyles[num]+";";
 
    if (cell.comment) {
+      result.title = cell.comment;
       if (context.showGrid) {
          if (context.commentClassName) {
             result.className = (result.className ? result.className+" " : "") + context.commentClassName;
@@ -4935,6 +4936,47 @@
    }
 
 //
+// GetComputedStyle(element, style) - returns computed style value
+//
+// http://blog.stchur.com/2006/06/21/css-computed-style/
+//
+
+SocialCalc.GetComputedStyle = function (element, style) {
+
+   var computedStyle;
+   if (typeof element.currentStyle != 'undefined') { // IE
+      computedStyle = element.currentStyle;
+      }
+   else {
+      computedStyle = document.defaultView.getComputedStyle(element, null);
+      }
+   return computedStyle[style];
+
+   }
+
+//
+// GetRelativeOffset(element) - returns relative offset of element
+// The relative offset is the offset of the first relative-positioned ancestor of the element.
+//
+
+SocialCalc.GetRelativeOffset = function (element) {
+
+   var e = element;
+   var offsetLeft = 0, offsetTop = 0;
+   while (e) {
+      if (e.nodeType==1 && SocialCalc.GetComputedStyle(e, 'position')=='relative') {
+         offset = SocialCalc.GetElementPosition(e);
+         offsetLeft += offset.left;
+         offsetTop  += offset.top;
+         break;
+         }
+      e = e.parentNode;
+      }
+   return {left:offsetLeft, top:offsetTop};
+
+   }
+
+//
 // LookupElement(element, array) - returns array element which is an object with "element" of element
 //
 
diff -ruP socialcalc/socialcalcpopup.js socialcalc.new/socialcalcpopup.js
--- socialcalc/socialcalcpopup.js	2010-05-13 18:39:28.000000000 +0300
+++ socialcalc.new/socialcalcpopup.js	2010-05-21 10:18:22.000000000 +0300
@@ -316,8 +316,10 @@
 
    pos = SocialCalc.GetElementPositionWithScroll(spcdata.mainele);
 
-   main.style.top = (pos.top+spcdata.mainele.offsetHeight)+"px";
-   main.style.left = (pos.left)+"px";
+   editor = SocialCalc.CurrentSpreadsheetControlObject.editor;
+
+   main.style.top = (pos.top+spcdata.mainele.offsetHeight-editor.relativeoffset.top)+"px";
+   main.style.left = (pos.left-editor.relativeoffset.left)+"px";
    main.style.zIndex = 100;
    main.style.backgroundColor = "#FFF";
    main.style.border = "1px solid black";
@@ -561,7 +563,7 @@
    var spc = sp.Controls;
 
    var spcid = {type: type, value: "", display: "", data: {}};
-   if (spc[id]) {alert("Already created "+id); return;}
+   //if (spc[id]) {alert("Already created "+id); return;}
    spc[id] = spcid;
    var spcdata = spcid.data;
 
@@ -965,7 +967,7 @@
    var spc = sp.Controls;
 
    var spcid = {type: type, value: "", display: "", data: {}};
-   if (spc[id]) {alert("Already created "+id); return;}
+   //if (spc[id]) {alert("Already created "+id); return;}
    spc[id] = spcid;
    var spcdata = spcid.data;
 
diff -ruP socialcalc/socialcalcspreadsheetcontrol.js socialcalc.new/socialcalcspreadsheetcontrol.js
--- socialcalc/socialcalcspreadsheetcontrol.js	2010-05-13 18:39:28.000000000 +0300
+++ socialcalc.new/socialcalcspreadsheetcontrol.js	2010-05-21 10:18:22.000000000 +0300
@@ -1042,6 +1042,7 @@
       v.style.display = "none";
       v.style.width = spreadsheet.width + "px";
       v.style.height = spreadsheet.viewheight + "px";
+      v.id = spreadsheet.idPrefix + views[vname].name + "view";
 
       html = SCLocSS(html); // localize with %loc!string!, etc.
 
@@ -2710,6 +2711,7 @@
    var s=SocialCalc.GetSpreadsheetControlObject();
    s.ExecuteCommand("set %C comment "+SocialCalc.encodeForSave(document.getElementById(s.idPrefix+"commenttext").value));
    var cell=SocialCalc.GetEditorCellElement(s.editor, s.editor.ecell.row, s.editor.ecell.col);
+   cell.element.title = document.getElementById(s.idPrefix+"commenttext").value;
    s.editor.UpdateCellCSS(cell, s.editor.ecell.row, s.editor.ecell.col);
    SocialCalc.KeyboardFocus();
    }
diff -ruP socialcalc/socialcalctableeditor.js socialcalc.new/socialcalctableeditor.js
--- socialcalc/socialcalctableeditor.js	2010-05-13 18:39:28.000000000 +0300
+++ socialcalc.new/socialcalctableeditor.js	2010-05-25 17:45:41.000000000 +0300
@@ -381,6 +381,9 @@
 
    this.range2 = {hasrange: false};
 
+   // Relative offset of editor when it's embedded inside relative-positioned ancestors
+   this.relativeoffset = {left:0, top:0};
+
    }
 
 // Methods:
@@ -1399,8 +1402,8 @@
    sizedisplay.style.width = "auto";
    sizedisplay.style.position = "absolute";
    sizedisplay.style.zIndex = 100;
-   sizedisplay.style.top = (editor.headposition.top+0)+"px";
-   sizedisplay.style.left = editor.colpositions[result.coltoresize]+"px";
+   sizedisplay.style.top = (editor.headposition.top-editor.relativeoffset.top)+"px";
+   sizedisplay.style.left = (editor.colpositions[result.coltoresize]-editor.relativeoffset.left)+"px";
    sizedisplay.innerHTML = '<table cellpadding="0" cellspacing="0"><tr><td style="height:100px;'+
       'border:1px dashed black;background-color:white;width:' +
       (editor.context.colwidth[mouseinfo.mouseresizecolnum]-2) + 'px;">&nbsp;</td>'+
@@ -2104,12 +2107,12 @@
          delete result.coltoresize;
          return result;
          }
-      else if (clientX >= editor.verticaltablecontrol.controlborder) {
+      else if (clientX >= editor.verticaltablecontrol.controlborder+editor.relativeoffset.left) {
          result.rowfooter = true;
          result.distance = clientX - editor.verticaltablecontrol.controlborder;
          return result;
          }
-      else if (clientY >= editor.horizontaltablecontrol.controlborder) {
+      else if (clientY >= editor.horizontaltablecontrol.controlborder+editor.relativeoffset.top) {
          result.colfooter = true;
          result.distance = clientY - editor.horizontaltablecontrol.controlborder;
          return result;
@@ -2759,6 +2762,9 @@
    editor.lastnonscrollingcol = editor.context.colpanes.length-1 > 0 ?
          editor.context.colpanes[editor.context.colpanes.length-2].last : 0;
 
+   // Relative offset
+   editor.relativeoffset = SocialCalc.GetRelativeOffset(editor.toplevel);
+
    // Now do the table controls
 
    editor.verticaltablecontrol.ComputeTableControlPositions();
@@ -3425,8 +3431,8 @@
       cell=SocialCalc.GetEditorCellElement(editor, editor.ecell.row, editor.ecell.col);
       if (cell) {
          position = SocialCalc.GetElementPosition(cell.element);
-         inputecho.container.style.left = (position.left-1)+"px";
-         inputecho.container.style.top = (position.top-1)+"px";
+         inputecho.container.style.left = (position.left-1-editor.relativeoffset.left)+"px";
+         inputecho.container.style.top = (position.top-1-editor.relativeoffset.top)+"px";
          }
       inputecho.container.style.display = "block";
       if (inputecho.interval) window.clearInterval(inputecho.interval); // just in case
@@ -3592,31 +3598,31 @@
       if (row < editor.firstscrollingrow) break;
       if (col < editor.firstscrollingcol) break;
 
-      if (editor.rowpositions[row+1]+20>editor.horizontaltablecontrol.controlborder) {
+      if (editor.rowpositions[row+1]+20>editor.horizontaltablecontrol.controlborder+editor.relativeoffset.top) {
          break;
          }
       if (editor.rowpositions[row+1]-10<editor.headposition.top) {
          break;
          }
-      if (editor.colpositions[col+1]+20>editor.verticaltablecontrol.controlborder) {
+      if (editor.colpositions[col+1]+20>editor.verticaltablecontrol.controlborder+editor.relativeoffset.left) {
          break;
          }
       if (editor.colpositions[col+1]-30<editor.headposition.left) {
          break;
          }
 
-      cellhandles.draghandle.style.left = (editor.colpositions[col+1]-1)+"px";
-      cellhandles.draghandle.style.top = (editor.rowpositions[row+1]-1)+"px";
+      cellhandles.draghandle.style.left = (editor.colpositions[col+1]-editor.relativeoffset.left-1)+"px";
+      cellhandles.draghandle.style.top = (editor.rowpositions[row+1]-editor.relativeoffset.top-1)+"px";
       cellhandles.draghandle.style.display = "block";
 
       if (moveshow) {
          cellhandles.draghandle.style.display = "none";
-         cellhandles.dragpalette.style.left = (editor.colpositions[col+1]-45)+"px";
-         cellhandles.dragpalette.style.top = (editor.rowpositions[row+1]-45)+"px";
+         cellhandles.dragpalette.style.left = (editor.colpositions[col+1]-editor.relativeoffset.left-45)+"px";
+         cellhandles.dragpalette.style.top = (editor.rowpositions[row+1]-editor.relativeoffset.top-45)+"px";
          cellhandles.dragpalette.style.display = "block";
          viewport = SocialCalc.GetViewportInfo();
-         cellhandles.dragtooltip.style.right = (viewport.width-(editor.colpositions[col+1]-1))+"px";
-         cellhandles.dragtooltip.style.bottom = (viewport.height-(editor.rowpositions[row+1]-1))+"px";
+         cellhandles.dragtooltip.style.right = (viewport.width-(editor.colpositions[col+1]-editor.relativeoffset.left-1))+"px";
+         cellhandles.dragtooltip.style.bottom = (viewport.height-(editor.rowpositions[row+1]-editor.relativeoffset.top-1))+"px";
          cellhandles.dragtooltip.style.display = "none";
          }
 
@@ -3650,6 +3656,9 @@
    var cellhandles = editor.cellhandles;
    if (!cellhandles.editor) return true; // no handles
 
+   clientX -= editor.relativeoffset.left;
+   clientY -= editor.relativeoffset.top;
+
    if (!editor.cellhandles.mouseDown) {
       editor.cellhandles.ShowCellHandles(true, true); // show move handles, too
 
@@ -3856,9 +3865,11 @@
    if (!editor) return true; // we're not handling it -- let browser do default
 
    if (editor.busy) return; // don't do anything when busy (is this correct?)
-
    var cellhandles = editor.cellhandles;
 
+   clientX -= editor.relativeoffset.left;
+   clientY -= editor.relativeoffset.top;
+
    if (cellhandles.timer) { // cancel timer
       window.clearTimeout(cellhandles.timer);
       cellhandles.timer = null;
@@ -4111,8 +4122,8 @@
       }
 
 
-   cellhandles.fillinghandle.style.left = (clientX)+"px";
-   cellhandles.fillinghandle.style.top = (clientY - 17)+"px";
+   cellhandles.fillinghandle.style.left = (clientX-editor.relativeoffset.left)+"px";
+   cellhandles.fillinghandle.style.top = (clientY-editor.relativeoffset.top - 17)+"px";
    cellhandles.fillinghandle.innerHTML = scc.s_CHindicatorOperationLookup[cellhandles.dragtype]+
                                          (scc.s_CHindicatorDirectionLookup[editor.cellhandles.filltype] || "");
    cellhandles.fillinghandle.style.display = "block";
@@ -4236,6 +4247,9 @@
    if (!editor) return; // not us, ignore
    var cellhandles = editor.cellhandles;
 
+   clientX -= editor.relativeoffset.left;
+   clientY -= editor.relativeoffset.top;
+
    element = mouseinfo.element;
 
    mouseinfo.ignore = false;
@@ -4607,7 +4621,7 @@
 
    var control = bobj.functionobj.control;
    var bposition = SocialCalc.GetElementPosition(bobj.element);
-   var clickpos = control.vertical ? buttoninfo.clientY : buttoninfo.clientX;
+   var clickpos = control.vertical ? buttoninfo.clientY-control.editor.relativeoffset.top : buttoninfo.clientX-control.editor.relativeoffset.left;
    if (control.editor.busy) { // ignore if busy - wait for next repeat
       return;
       }
@@ -4682,26 +4696,27 @@
 SocialCalc.ComputeTableControlPositions = function(control) {
 
    var editor = control.editor;
+   var offset = control.editor.relativeoffset;
 
    if (!editor.gridposition || !editor.headposition) throw("Can't compute table control positions before editor positions");
 
    if (control.vertical) {
-      control.controlborder = editor.gridposition.left+editor.tablewidth; // border=left position
-      control.endcapstart = editor.gridposition.top; // start=top position
-      control.panesliderstart = editor.firstscrollingrowtop-control.sliderthickness;
-      control.lessbuttonstart = editor.firstscrollingrowtop-1;
-      control.morebuttonstart = editor.gridposition.top+editor.tableheight-control.buttonthickness;
-      control.scrollareastart = editor.firstscrollingrowtop-1+control.buttonthickness;
+      control.controlborder = editor.gridposition.left+editor.tablewidth-offset.left; // border=left position
+      control.endcapstart = editor.gridposition.top-offset.top; // start=top position
+      control.panesliderstart = editor.firstscrollingrowtop-control.sliderthickness-offset.top;
+      control.lessbuttonstart = editor.firstscrollingrowtop-1-offset.top;
+      control.morebuttonstart = editor.gridposition.top+editor.tableheight-control.buttonthickness-offset.top;
+      control.scrollareastart = editor.firstscrollingrowtop-1+control.buttonthickness-offset.top;
       control.scrollareaend = control.morebuttonstart-1;
       control.scrollareasize = control.scrollareaend-control.scrollareastart+1;
       }
    else {
-      control.controlborder = editor.gridposition.top+editor.tableheight; // border=top position
-      control.endcapstart = editor.gridposition.left; // start=left position
-      control.panesliderstart = editor.firstscrollingcolleft-control.sliderthickness;
-      control.lessbuttonstart = editor.firstscrollingcolleft-1;
-      control.morebuttonstart = editor.gridposition.left+editor.tablewidth-control.buttonthickness;
-      control.scrollareastart = editor.firstscrollingcolleft-1+control.buttonthickness;
+      control.controlborder = editor.gridposition.top+editor.tableheight-offset.top; // border=top position
+      control.endcapstart = editor.gridposition.left-offset.left; // start=left position
+      control.panesliderstart = editor.firstscrollingcolleft-control.sliderthickness-offset.left;
+      control.lessbuttonstart = editor.firstscrollingcolleft-1-offset.left;
+      control.morebuttonstart = editor.gridposition.left+editor.tablewidth-control.buttonthickness-offset.left;
+      control.scrollareastart = editor.firstscrollingcolleft-1+control.buttonthickness-offset.left;
       control.scrollareaend = control.morebuttonstart-1;
       control.scrollareasize = control.scrollareaend-control.scrollareastart+1;
       }
@@ -4733,8 +4748,8 @@
 
    if (dobj.vertical) {
       row = SocialCalc.Lookup(draginfo.clientY+dobj.functionobj.control.sliderthickness, editor.rowpositions);
-      draginfo.trackingline.style.top = (editor.rowpositions[row] || editor.headposition.top)+"px";
-      draginfo.trackingline.style.left = editor.headposition.left+"px";
+      draginfo.trackingline.style.top = ((editor.rowpositions[row] || editor.headposition.top)-editor.relativeoffset.top)+"px";
+      draginfo.trackingline.style.left = (editor.headposition.left-editor.relativeoffset.left)+"px";
       if (editor.context.rowpanes.length-1) { // has 2 already
          editor.context.SetRowPaneFirstLast(1, editor.context.rowpanes[0].last+1, editor.context.rowpanes[0].last+1);
          editor.FitToEditTable();
@@ -4743,8 +4758,8 @@
       }
    else {
       col = SocialCalc.Lookup(draginfo.clientX+dobj.functionobj.control.sliderthickness, editor.colpositions);
-      draginfo.trackingline.style.top = editor.headposition.top+"px";
-      draginfo.trackingline.style.left = (editor.colpositions[col] || editor.headposition.left)+"px";
+      draginfo.trackingline.style.top = (editor.headposition.top-editor.relativeoffset.top)+"px";
+      draginfo.trackingline.style.left = ((editor.colpositions[col] || editor.headposition.left)-editor.relativeoffset.left)+"px";
       if (editor.context.colpanes.length-1) { // has 2 already
          editor.context.SetColPaneFirstLast(1, editor.context.colpanes[0].last+1, editor.context.colpanes[0].last+1);
          editor.FitToEditTable();
@@ -4770,20 +4785,20 @@
    if (dobj.vertical) {
       max = control.morebuttonstart - control.minscrollingpanesize - draginfo.offsetY; // restrict movement
       if (draginfo.clientY > max) draginfo.clientY = max;
-      min = editor.headposition.top - sliderthickness - draginfo.offsetY;
+      min = editor.headposition.top - sliderthickness - draginfo.offsetY - editor.relativeoffset.top;
       if (draginfo.clientY < min) draginfo.clientY = min;
 
       row = SocialCalc.Lookup(draginfo.clientY+sliderthickness, editor.rowpositions);
-      draginfo.trackingline.style.top = (editor.rowpositions[row] || editor.headposition.top)+"px";
+      draginfo.trackingline.style.top = ((editor.rowpositions[row] || editor.headposition.top)-editor.relativeoffset.top)+"px";
       }
    else {
       max = control.morebuttonstart - control.minscrollingpanesize - draginfo.offsetX;
       if (draginfo.clientX > max) draginfo.clientX = max;
-      min = editor.headposition.left - sliderthickness - draginfo.offsetX;
+      min = editor.headposition.left - sliderthickness - draginfo.offsetX - editor.relativeoffset.left;
       if (draginfo.clientX < min) draginfo.clientX = min;
 
       col = SocialCalc.Lookup(draginfo.clientX+sliderthickness, editor.colpositions);
-      draginfo.trackingline.style.left = (editor.colpositions[col] || editor.headposition.left)+"px";
+      draginfo.trackingline.style.left = ((editor.colpositions[col] || editor.headposition.left)-editor.relativeoffset.left)+"px";
       }
 
    SocialCalc.DragFunctionPosition(event, draginfo, dobj);
@@ -4804,7 +4819,7 @@
    if (dobj.vertical) {
       max = control.morebuttonstart - control.minscrollingpanesize - draginfo.offsetY; // restrict movement
       if (draginfo.clientY > max) draginfo.clientY = max;
-      min = editor.headposition.top - sliderthickness - draginfo.offsetY;
+      min = editor.headposition.top - sliderthickness - draginfo.offsetY - editor.relativeoffset.top;
       if (draginfo.clientY < min) draginfo.clientY = min;
 
       row = SocialCalc.Lookup(draginfo.clientY+sliderthickness, editor.rowpositions);
@@ -4826,7 +4841,7 @@
    else {
       max = control.morebuttonstart - control.minscrollingpanesize - draginfo.offsetX;
       if (draginfo.clientX > max) draginfo.clientX = max;
-      min = editor.headposition.left - sliderthickness - draginfo.offsetX;
+      min = editor.headposition.left - sliderthickness - draginfo.offsetX - editor.relativeoffset.left;
       if (draginfo.clientX < min) draginfo.clientX = min;
 
       col = SocialCalc.Lookup(draginfo.clientX+sliderthickness, editor.colpositions);
@@ -4888,7 +4903,7 @@
    if (dobj.vertical) {
       if (scc.TCTDFSthumbstatusvClass) draginfo.thumbstatus.className = scc.TCTDFSthumbstatusvClass;
       SocialCalc.setStyles(draginfo.thumbstatus, scc.TCTDFSthumbstatusvStyle);
-      draginfo.thumbstatus.style.top = (draginfo.clientY+scc.TCTDFStopOffsetv)+"px";
+      draginfo.thumbstatus.style.top = (draginfo.clientY+scc.TCTDFStopOffsetv-editor.relativeoffset.top)+"px";
       draginfo.thumbstatus.style.left = (control.controlborder-10-(editor.tablewidth/2))+"px";
       draginfo.thumbstatus.style.width = (editor.tablewidth/2)+"px";
 
@@ -4909,7 +4924,7 @@
       if (scc.TCTDFSthumbstatushClass) draginfo.thumbstatus.className = scc.TCTDFSthumbstatushClass;
       SocialCalc.setStyles(draginfo.thumbstatus, scc.TCTDFSthumbstatushStyle);
       draginfo.thumbstatus.style.top = (control.controlborder+scc.TCTDFStopOffseth)+"px";
-      draginfo.thumbstatus.style.left = (draginfo.clientX+scc.TCTDFSleftOffseth)+"px";
+      draginfo.thumbstatus.style.left = (draginfo.clientX+scc.TCTDFSleftOffseth-editor.relativeoffset.left)+"px";
       editor.toplevel.appendChild(draginfo.thumbstatus);
       draginfo.thumbstatus.innerHTML = scc.s_TCTDFthumbstatusPrefixh+SocialCalc.rcColname(editor.firstscrollingcol);
       }
@@ -4955,7 +4970,7 @@
          draginfo.clientY = control.scrollareaend - draginfo.offsetY - control.thumbthickness + 2;
       if (draginfo.clientY < control.scrollareastart - draginfo.offsetY - 1)
          draginfo.clientY = control.scrollareastart - draginfo.offsetY - 1;
-      draginfo.thumbstatus.style.top = draginfo.clientY+"px";
+      draginfo.thumbstatus.style.top = (draginfo.clientY-editor.relativeoffset.top)+"px";
 
       first =
          ((draginfo.clientY+draginfo.offsetY-control.scrollareastart+1)/(control.scrollareasize-control.thumbthickness))
@@ -4974,7 +4989,7 @@
          draginfo.clientX = control.scrollareaend - draginfo.offsetX - control.thumbthickness + 2;
       if (draginfo.clientX < control.scrollareastart - draginfo.offsetX - 1)
          draginfo.clientX = control.scrollareastart - draginfo.offsetX - 1;
-      draginfo.thumbstatus.style.left = draginfo.clientX+"px";
+      draginfo.thumbstatus.style.left = (draginfo.clientX-editor.relativeoffset.left)+"px";
 
       first =
          ((draginfo.clientX+draginfo.offsetX-control.scrollareastart+1)/(control.scrollareasize-control.thumbthickness))
